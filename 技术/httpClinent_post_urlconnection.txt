 // 发送POST请求，参数为form表单形式
    public static String postForm(String url, Map<String, Object> params) throws IOException{
        String result = null;
        HttpClient client = new HttpClient();   
        PostMethod method = new PostMethod(url);
        for (Entry<String, Object>  entry: params.entrySet()) {
            method.addParameter(entry.getKey(), entry.getValue().toString());
        }
        HttpMethodParams param = method.getParams();
        param.setContentCharset("UTF-8");
        client.executeMethod(method);
        //打印返回的信息  
        result = method.getResponseBodyAsString();
        //释放连接  
        method.releaseConnection();
        return result;
        
    };

	public static String sendHttpRequest(String sUrl, String method, String encoding){
		HttpURLConnection con = null;
		ByteArrayOutputStream baos = null;
		InputStream is = null;
		String sResult = "";
		try {
			URL url = new URL(sUrl);

			con = (HttpURLConnection)url.openConnection();
			con.setRequestMethod(method);
			con.setReadTimeout(1000 * 60 * 5);
			
			baos = new ByteArrayOutputStream();
			is = con.getInputStream();
			int ch;
			while((ch = is.read()) != -1){
				baos.write(ch);
			} 
			
			if(encoding != null)
				sResult = new String(baos.toByteArray(), encoding);
			else
				sResult = new String(baos.toByteArray());
		} catch (SocketException se) {	
			se.printStackTrace();
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(is != null)
	            try {
	                is.close();
                } catch (IOException e) {
	                e.printStackTrace();
                }
            if(baos != null)
	            try {
	                baos.close();
                } catch (IOException e) {
	                e.printStackTrace();
                }
			if(con != null)
				con.disconnect();
		}
		return sResult;
	}